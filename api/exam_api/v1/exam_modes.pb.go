// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.3
// source: exam_api/v1/exam_modes.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamineeStatus int32

const (
	ExamineeStatus_ExamineeNotActive ExamineeStatus = 0 // 未激活
	ExamineeStatus_ExamineeActive    ExamineeStatus = 1 // 已激活
)

// Enum value maps for ExamineeStatus.
var (
	ExamineeStatus_name = map[int32]string{
		0: "ExamineeNotActive",
		1: "ExamineeActive",
	}
	ExamineeStatus_value = map[string]int32{
		"ExamineeNotActive": 0,
		"ExamineeActive":    1,
	}
)

func (x ExamineeStatus) Enum() *ExamineeStatus {
	p := new(ExamineeStatus)
	*p = x
	return p
}

func (x ExamineeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamineeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_api_v1_exam_modes_proto_enumTypes[0].Descriptor()
}

func (ExamineeStatus) Type() protoreflect.EnumType {
	return &file_exam_api_v1_exam_modes_proto_enumTypes[0]
}

func (x ExamineeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamineeStatus.Descriptor instead.
func (ExamineeStatus) EnumDescriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{0}
}

type LoginPlatform int32

const (
	LoginPlatform_NoKnow     LoginPlatform = 0
	LoginPlatform_Management LoginPlatform = 1
	LoginPlatform_Exam       LoginPlatform = 2
)

// Enum value maps for LoginPlatform.
var (
	LoginPlatform_name = map[int32]string{
		0: "NoKnow",
		1: "Management",
		2: "Exam",
	}
	LoginPlatform_value = map[string]int32{
		"NoKnow":     0,
		"Management": 1,
		"Exam":       2,
	}
)

func (x LoginPlatform) Enum() *LoginPlatform {
	p := new(LoginPlatform)
	*p = x
	return p
}

func (x LoginPlatform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginPlatform) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_api_v1_exam_modes_proto_enumTypes[1].Descriptor()
}

func (LoginPlatform) Type() protoreflect.EnumType {
	return &file_exam_api_v1_exam_modes_proto_enumTypes[1]
}

func (x LoginPlatform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginPlatform.Descriptor instead.
func (LoginPlatform) EnumDescriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{1}
}

type StageNumber int32

const (
	StageNumber_NoStart         StageNumber = 0 // 未开始
	StageNumber_NoSubmit        StageNumber = 1 // 未提交
	StageNumber_Submit          StageNumber = 2 // 已提交
	StageNumber_CalculatePoints StageNumber = 3 // 已算分
	StageNumber_Failed          StageNumber = 4 // 处理失败
)

// Enum value maps for StageNumber.
var (
	StageNumber_name = map[int32]string{
		0: "NoStart",
		1: "NoSubmit",
		2: "Submit",
		3: "CalculatePoints",
		4: "Failed",
	}
	StageNumber_value = map[string]int32{
		"NoStart":         0,
		"NoSubmit":        1,
		"Submit":          2,
		"CalculatePoints": 3,
		"Failed":          4,
	}
)

func (x StageNumber) Enum() *StageNumber {
	p := new(StageNumber)
	*p = x
	return p
}

func (x StageNumber) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StageNumber) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_api_v1_exam_modes_proto_enumTypes[2].Descriptor()
}

func (StageNumber) Type() protoreflect.EnumType {
	return &file_exam_api_v1_exam_modes_proto_enumTypes[2]
}

func (x StageNumber) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StageNumber.Descriptor instead.
func (StageNumber) EnumDescriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{2}
}

type QuestionType int32

const (
	QuestionType_RadioChoice    QuestionType = 0
	QuestionType_MultipleChoice QuestionType = 1
	QuestionType_Judge          QuestionType = 2
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "RadioChoice",
		1: "MultipleChoice",
		2: "Judge",
	}
	QuestionType_value = map[string]int32{
		"RadioChoice":    0,
		"MultipleChoice": 1,
		"Judge":          2,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_api_v1_exam_modes_proto_enumTypes[3].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_exam_api_v1_exam_modes_proto_enumTypes[3]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{3}
}

type ExamLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginAccount string `protobuf:"bytes,1,opt,name=login_account,json=login_account,proto3" json:"login_account"`
	PassWord     string `protobuf:"bytes,2,opt,name=pass_word,json=pass_word,proto3" json:"pass_word"`
}

func (x *ExamLoginRequest) Reset() {
	*x = ExamLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamLoginRequest) ProtoMessage() {}

func (x *ExamLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamLoginRequest.ProtoReflect.Descriptor instead.
func (*ExamLoginRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{0}
}

func (x *ExamLoginRequest) GetLoginAccount() string {
	if x != nil {
		return x.LoginAccount
	}
	return ""
}

func (x *ExamLoginRequest) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

type ExamLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=user_name,proto3" json:"user_name"`
	Token    string `protobuf:"bytes,2,opt,name=token,json=token=,proto3" json:"token"`
}

func (x *ExamLoginResponse) Reset() {
	*x = ExamLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamLoginResponse) ProtoMessage() {}

func (x *ExamLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamLoginResponse.ProtoReflect.Descriptor instead.
func (*ExamLoginResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{1}
}

func (x *ExamLoginResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ExamLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetExamPageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex int32 `protobuf:"varint,1,opt,name=page_index,json=page_index,proto3" json:"page_index"`
	PageSize  int32 `protobuf:"varint,2,opt,name=page_size,json=page_size,proto3" json:"page_size"`
}

func (x *GetExamPageListRequest) Reset() {
	*x = GetExamPageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExamPageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamPageListRequest) ProtoMessage() {}

func (x *GetExamPageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamPageListRequest.ProtoReflect.Descriptor instead.
func (*GetExamPageListRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{2}
}

func (x *GetExamPageListRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetExamPageListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetExamPageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamList []*ExamData `protobuf:"bytes,1,rep,name=exam_list,json=exam_list,proto3" json:"exam_list"`
	Total    int64       `protobuf:"varint,2,opt,name=total,json=total,proto3" json:"total"`
}

func (x *GetExamPageListResponse) Reset() {
	*x = GetExamPageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExamPageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamPageListResponse) ProtoMessage() {}

func (x *GetExamPageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamPageListResponse.ProtoReflect.Descriptor instead.
func (*GetExamPageListResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{3}
}

func (x *GetExamPageListResponse) GetExamList() []*ExamData {
	if x != nil {
		return x.ExamList
	}
	return nil
}

func (x *GetExamPageListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ExamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamineeAssociationId string `protobuf:"bytes,1,opt,name=examinee_association_id,json=examinee_association_id,proto3" json:"examinee_association_id"`
	SalesPaperName        string `protobuf:"bytes,2,opt,name=sales_paper_name,json=sales_paper_name,proto3" json:"sales_paper_name"`
	ExamStatus            int32  `protobuf:"varint,3,opt,name=exam_status,json=exam_status,proto3" json:"exam_status"`
}

func (x *ExamData) Reset() {
	*x = ExamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamData) ProtoMessage() {}

func (x *ExamData) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamData.ProtoReflect.Descriptor instead.
func (*ExamData) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{4}
}

func (x *ExamData) GetExamineeAssociationId() string {
	if x != nil {
		return x.ExamineeAssociationId
	}
	return ""
}

func (x *ExamData) GetSalesPaperName() string {
	if x != nil {
		return x.SalesPaperName
	}
	return ""
}

func (x *ExamData) GetExamStatus() int32 {
	if x != nil {
		return x.ExamStatus
	}
	return 0
}

type StartExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamineeAssociationId string `protobuf:"bytes,1,opt,name=examinee_association_id,json=examinee_association_id,proto3" json:"examinee_association_id"`
}

func (x *StartExamRequest) Reset() {
	*x = StartExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExamRequest) ProtoMessage() {}

func (x *StartExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExamRequest.ProtoReflect.Descriptor instead.
func (*StartExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{5}
}

func (x *StartExamRequest) GetExamineeAssociationId() string {
	if x != nil {
		return x.ExamineeAssociationId
	}
	return ""
}

type StartExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamToken     string `protobuf:"bytes,1,opt,name=exam_token,json=exam_token,proto3" json:"exam_token"`
	TotalDuration int32  `protobuf:"varint,2,opt,name=total_duration,json=total_duration,proto3" json:"total_duration"`
	UsedDuration  int32  `protobuf:"varint,3,opt,name=used_duration,json=used_duration,proto3" json:"used_duration"`
	Remaining     int32  `protobuf:"varint,4,opt,name=remaining,json=remaining,proto3" json:"remaining"`
}

func (x *StartExamResponse) Reset() {
	*x = StartExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartExamResponse) ProtoMessage() {}

func (x *StartExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartExamResponse.ProtoReflect.Descriptor instead.
func (*StartExamResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{6}
}

func (x *StartExamResponse) GetExamToken() string {
	if x != nil {
		return x.ExamToken
	}
	return ""
}

func (x *StartExamResponse) GetTotalDuration() int32 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

func (x *StartExamResponse) GetUsedDuration() int32 {
	if x != nil {
		return x.UsedDuration
	}
	return 0
}

func (x *StartExamResponse) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

type QuestionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId          string                `protobuf:"bytes,1,opt,name=question_id,json=question_id,proto3" json:"question_id"`
	Title               string                `protobuf:"bytes,2,opt,name=title,json=title,proto3" json:"title"`
	QuestionTypeId      QuestionType          `protobuf:"varint,3,opt,name=question_type_id,json=question_type_id,proto3,enum=exam_api.v1.QuestionType" json:"question_type_id"`
	Order               int32                 `protobuf:"varint,4,opt,name=order,json=order,proto3" json:"order"`
	QuestionOptionsData []*QuestionOptionData `protobuf:"bytes,5,rep,name=question_options_data,json=question_options_data,proto3" json:"question_options_data"`
}

func (x *QuestionData) Reset() {
	*x = QuestionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionData) ProtoMessage() {}

func (x *QuestionData) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionData.ProtoReflect.Descriptor instead.
func (*QuestionData) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{7}
}

func (x *QuestionData) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *QuestionData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QuestionData) GetQuestionTypeId() QuestionType {
	if x != nil {
		return x.QuestionTypeId
	}
	return QuestionType_RadioChoice
}

func (x *QuestionData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *QuestionData) GetQuestionOptionsData() []*QuestionOptionData {
	if x != nil {
		return x.QuestionOptionsData
	}
	return nil
}

type QuestionOptionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionOptionId string `protobuf:"bytes,1,opt,name=question_option_id,json=question_option_id,proto3" json:"question_option_id"`
	Description      string `protobuf:"bytes,2,opt,name=description,json=description,proto3" json:"description"`
	SerialNumber     string `protobuf:"bytes,3,opt,name=serial_number,json=serial_number,proto3" json:"serial_number"`
}

func (x *QuestionOptionData) Reset() {
	*x = QuestionOptionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionOptionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionOptionData) ProtoMessage() {}

func (x *QuestionOptionData) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionOptionData.ProtoReflect.Descriptor instead.
func (*QuestionOptionData) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionOptionData) GetQuestionOptionId() string {
	if x != nil {
		return x.QuestionOptionId
	}
	return ""
}

func (x *QuestionOptionData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuestionOptionData) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type ExamQuestionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex int32 `protobuf:"varint,1,opt,name=page_index,json=page_index,proto3" json:"page_index"`
	PageSize  int32 `protobuf:"varint,2,opt,name=page_size,json=page_size,proto3" json:"page_size"`
}

func (x *ExamQuestionRequest) Reset() {
	*x = ExamQuestionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionRequest) ProtoMessage() {}

func (x *ExamQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionRequest.ProtoReflect.Descriptor instead.
func (*ExamQuestionRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{9}
}

func (x *ExamQuestionRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *ExamQuestionRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ExamQuestionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionData []*QuestionData `protobuf:"bytes,6,rep,name=question_data,json=question_data,proto3" json:"question_data"`
	Total        int64           `protobuf:"varint,2,opt,name=total,json=total,proto3" json:"total"`
}

func (x *ExamQuestionResponse) Reset() {
	*x = ExamQuestionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExamQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamQuestionResponse) ProtoMessage() {}

func (x *ExamQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamQuestionResponse.ProtoReflect.Descriptor instead.
func (*ExamQuestionResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{10}
}

func (x *ExamQuestionResponse) GetQuestionData() []*QuestionData {
	if x != nil {
		return x.QuestionData
	}
	return nil
}

func (x *ExamQuestionResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type HeartbeatAndSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExamineeAssociationId string                `protobuf:"bytes,1,opt,name=examinee_association_id,json=examinee_association_id,proto3" json:"examinee_association_id"`
	AnswerData            []*QuestionAnswerData `protobuf:"bytes,2,rep,name=answer_data,json=answer_data,proto3" json:"answer_data"`
}

func (x *HeartbeatAndSaveRequest) Reset() {
	*x = HeartbeatAndSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatAndSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatAndSaveRequest) ProtoMessage() {}

func (x *HeartbeatAndSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatAndSaveRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatAndSaveRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{11}
}

func (x *HeartbeatAndSaveRequest) GetExamineeAssociationId() string {
	if x != nil {
		return x.ExamineeAssociationId
	}
	return ""
}

func (x *HeartbeatAndSaveRequest) GetAnswerData() []*QuestionAnswerData {
	if x != nil {
		return x.AnswerData
	}
	return nil
}

type HeartbeatAndSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalDuration int32 `protobuf:"varint,1,opt,name=total_duration,json=total_duration,proto3" json:"total_duration"`
	UsedDuration  int32 `protobuf:"varint,2,opt,name=used_duration,json=used_duration,proto3" json:"used_duration"`
	Remaining     int32 `protobuf:"varint,3,opt,name=remaining,json=remaining,proto3" json:"remaining"`
}

func (x *HeartbeatAndSaveResponse) Reset() {
	*x = HeartbeatAndSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatAndSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatAndSaveResponse) ProtoMessage() {}

func (x *HeartbeatAndSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatAndSaveResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatAndSaveResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatAndSaveResponse) GetTotalDuration() int32 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

func (x *HeartbeatAndSaveResponse) GetUsedDuration() int32 {
	if x != nil {
		return x.UsedDuration
	}
	return 0
}

func (x *HeartbeatAndSaveResponse) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

type QuestionAnswerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId              string   `protobuf:"bytes,1,opt,name=question_id,json=question_id,proto3" json:"question_id"`
	OptionsSerialNumberData []string `protobuf:"bytes,5,rep,name=options_serial_number_data,json=options_serial_number_data,proto3" json:"options_serial_number_data"`
}

func (x *QuestionAnswerData) Reset() {
	*x = QuestionAnswerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionAnswerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionAnswerData) ProtoMessage() {}

func (x *QuestionAnswerData) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionAnswerData.ProtoReflect.Descriptor instead.
func (*QuestionAnswerData) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{13}
}

func (x *QuestionAnswerData) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *QuestionAnswerData) GetOptionsSerialNumberData() []string {
	if x != nil {
		return x.OptionsSerialNumberData
	}
	return nil
}

type SubmitExamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerData []*QuestionAnswerData `protobuf:"bytes,2,rep,name=answer_data,json=answer_data,proto3" json:"answer_data"`
}

func (x *SubmitExamRequest) Reset() {
	*x = SubmitExamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitExamRequest) ProtoMessage() {}

func (x *SubmitExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitExamRequest.ProtoReflect.Descriptor instead.
func (*SubmitExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{14}
}

func (x *SubmitExamRequest) GetAnswerData() []*QuestionAnswerData {
	if x != nil {
		return x.AnswerData
	}
	return nil
}

type SubmitExamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitExamResponse) Reset() {
	*x = SubmitExamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_exam_api_v1_exam_modes_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitExamResponse) ProtoMessage() {}

func (x *SubmitExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_api_v1_exam_modes_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitExamResponse.ProtoReflect.Descriptor instead.
func (*SubmitExamResponse) Descriptor() ([]byte, []int) {
	return file_exam_api_v1_exam_modes_proto_rawDescGZIP(), []int{15}
}

var File_exam_api_v1_exam_modes_proto protoreflect.FileDescriptor

var file_exam_api_v1_exam_modes_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x10,
	0x45, 0x78, 0x61, 0x6d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x92, 0x41, 0x20, 0x2a, 0x09, 0xe7, 0x99,
	0xbb, 0xe5, 0xbd, 0x95, 0xe5, 0x90, 0x8d, 0x78, 0x0a, 0x80, 0x01, 0x06, 0xd2, 0x01, 0x0d, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x70,
	0x61, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c,
	0x92, 0x41, 0x19, 0x2a, 0x06, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x78, 0x0a, 0x80, 0x01, 0x06,
	0xd2, 0x01, 0x09, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x09, 0x70, 0x61,
	0x73, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x64, 0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0x92, 0x41, 0x0b, 0x2a, 0x09, 0xe7, 0x99, 0xbb, 0xe5, 0xbd, 0x95, 0xe5, 0x90, 0x8d, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x2a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3d, 0x22, 0x7a, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0x92, 0x41, 0x0b,
	0x2a, 0x06, 0xe9, 0xa1, 0xb5, 0xe7, 0xa0, 0x81, 0x3a, 0x01, 0x31, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0x92, 0x41, 0x0f, 0x2a,
	0x09, 0xe6, 0xaf, 0x8f, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x61, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xbe, 0x85, 0xe8, 0x80, 0x83, 0xe8, 0xaf, 0x95, 0xe5,
	0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x2a, 0x06, 0xe6, 0x80, 0xbb, 0xe6, 0x95, 0xb0, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x47, 0x0a, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x2a, 0x08, 0xe5, 0x85, 0xb3, 0xe8, 0x81, 0x94, 0x69, 0x64,
	0x52, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x10, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe8, 0xaf, 0x95, 0xe5, 0x8d, 0xb7,
	0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x25, 0x92,
	0x41, 0x22, 0x2a, 0x20, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xef, 0xbc, 0x9a, 0x31, 0xe6, 0x9c,
	0xaa, 0xe5, 0xae, 0x8c, 0xe6, 0x88, 0x90, 0xef, 0xbc, 0x8c, 0x32, 0xe5, 0xb7, 0xb2, 0xe5, 0xae,
	0x8c, 0xe6, 0x88, 0x90, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x75, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a, 0x08, 0xe5, 0x85, 0xb3,
	0xe8, 0x81, 0x94, 0x69, 0x64, 0xd2, 0x01, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52,
	0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe8, 0x80, 0x83, 0xe8, 0xaf, 0x95, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x3c, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe8,
	0x80, 0x83, 0xe8, 0xaf, 0x95, 0xe6, 0x80, 0xbb, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x2a, 0x15, 0xe8, 0x80, 0x83, 0xe8,
	0xaf, 0x95, 0xe5, 0xb7, 0xb2, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe6, 0x97, 0xb6, 0xe9, 0x97,
	0xb4, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0xe8, 0x80, 0x83, 0xe8, 0xaf, 0x95,
	0xe5, 0x89, 0xa9, 0xe4, 0xbd, 0x99, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xf4, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92,
	0x41, 0x0d, 0x2a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52,
	0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e,
	0x2a, 0x0c, 0xe9, 0xa2, 0x98, 0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87, 0xe9, 0xa2, 0x98, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x6e, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x27, 0x92, 0x41, 0x24, 0x2a,
	0x22, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x3a, 0x30, 0xe5, 0x8d, 0x95, 0xe9, 0x80, 0x89, 0xe3,
	0x80, 0x81, 0x31, 0xe5, 0xa4, 0x9a, 0xe9, 0x80, 0x89, 0xe3, 0x80, 0x81, 0x32, 0xe5, 0x88, 0xa4,
	0xe6, 0x96, 0xad, 0x52, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe9, 0xa2, 0x98, 0xe7, 0x9b,
	0xae, 0xe5, 0xba, 0x8f, 0xe5, 0x8f, 0xb7, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x6e,
	0x0a, 0x15, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x17,
	0x92, 0x41, 0x14, 0x2a, 0x12, 0xe9, 0xa2, 0x98, 0xe7, 0x9b, 0xae, 0xe9, 0x80, 0x89, 0xe9, 0xa1,
	0xb9, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0x52, 0x15, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcb,
	0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x12, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52, 0x12, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x33,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe9, 0x80, 0x89, 0xe9, 0xa1, 0xb9,
	0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a,
	0x0c, 0xe9, 0x80, 0x89, 0xe9, 0xa1, 0xb9, 0xe5, 0xba, 0x8f, 0xe5, 0x8f, 0xb7, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a,
	0x13, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x2a, 0x06, 0xe9,
	0xa1, 0xb5, 0xe7, 0xa0, 0x81, 0x3a, 0x01, 0x31, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x15, 0xe6, 0xaf,
	0x8f, 0xe9, 0xa1, 0xb5, 0xe5, 0xb1, 0x95, 0xe7, 0xa4, 0xba, 0xe9, 0xa2, 0x98, 0xe7, 0x9b, 0xae,
	0xe6, 0x95, 0xb0, 0x3a, 0x01, 0x38, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x61, 0x6d, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x42, 0x11, 0x92, 0x41,
	0x0e, 0x2a, 0x0c, 0xe8, 0xaf, 0x95, 0xe5, 0x8d, 0xb7, 0xe5, 0x86, 0x85, 0xe5, 0xae, 0xb9, 0x52,
	0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0x92,
	0x41, 0x08, 0x2a, 0x06, 0xe6, 0x80, 0xbb, 0xe6, 0x95, 0xb0, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0xdb, 0x01, 0x0a, 0x17, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x41,
	0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a,
	0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36,
	0x92, 0x41, 0x33, 0x2a, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0xd2, 0x01, 0x17, 0x65,
	0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x52, 0x17, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12,
	0x4e, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x2a, 0x06, 0xe7, 0xad, 0x94, 0xe6,
	0xa1, 0x88, 0x52, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xd1, 0x01, 0x0a, 0x18, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x41, 0x6e, 0x64,
	0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe8, 0x80, 0x83, 0xe8, 0xaf,
	0x95, 0xe6, 0x80, 0xbb, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x2a, 0x15, 0xe8, 0x80, 0x83, 0xe8, 0xaf, 0x95, 0xe5, 0xb7,
	0xb2, 0xe4, 0xbd, 0xbf, 0xe7, 0x94, 0xa8, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x0d, 0x75,
	0x73, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x09,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0xe8, 0x80, 0x83, 0xe8, 0xaf, 0x95, 0xe5, 0x89, 0xa9, 0xe4,
	0xbd, 0x99, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0b, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x51,
	0x0a, 0x1a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe9, 0xa2, 0x98, 0xe7, 0x9b, 0xae, 0xe9,
	0x80, 0x89, 0xe9, 0xa1, 0xb9, 0x52, 0x1a, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x63, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x92, 0x41,
	0x08, 0x2a, 0x06, 0xe7, 0xad, 0x94, 0xe6, 0xa1, 0x88, 0x52, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3b, 0x0a, 0x0e,
	0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x2a, 0x35, 0x0a, 0x0d, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f,
	0x4b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x78, 0x61, 0x6d, 0x10, 0x02,
	0x2a, 0x55, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4e, 0x6f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x04, 0x2a, 0x3e, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x10, 0x02, 0x42, 0x14, 0x5a, 0x12, 0x65, 0x78, 0x61, 0x6d, 0x5f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_exam_api_v1_exam_modes_proto_rawDescOnce sync.Once
	file_exam_api_v1_exam_modes_proto_rawDescData = file_exam_api_v1_exam_modes_proto_rawDesc
)

func file_exam_api_v1_exam_modes_proto_rawDescGZIP() []byte {
	file_exam_api_v1_exam_modes_proto_rawDescOnce.Do(func() {
		file_exam_api_v1_exam_modes_proto_rawDescData = protoimpl.X.CompressGZIP(file_exam_api_v1_exam_modes_proto_rawDescData)
	})
	return file_exam_api_v1_exam_modes_proto_rawDescData
}

var file_exam_api_v1_exam_modes_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_exam_api_v1_exam_modes_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_exam_api_v1_exam_modes_proto_goTypes = []interface{}{
	(ExamineeStatus)(0),              // 0: exam_api.v1.ExamineeStatus
	(LoginPlatform)(0),               // 1: exam_api.v1.LoginPlatform
	(StageNumber)(0),                 // 2: exam_api.v1.StageNumber
	(QuestionType)(0),                // 3: exam_api.v1.QuestionType
	(*ExamLoginRequest)(nil),         // 4: exam_api.v1.ExamLoginRequest
	(*ExamLoginResponse)(nil),        // 5: exam_api.v1.ExamLoginResponse
	(*GetExamPageListRequest)(nil),   // 6: exam_api.v1.GetExamPageListRequest
	(*GetExamPageListResponse)(nil),  // 7: exam_api.v1.GetExamPageListResponse
	(*ExamData)(nil),                 // 8: exam_api.v1.ExamData
	(*StartExamRequest)(nil),         // 9: exam_api.v1.StartExamRequest
	(*StartExamResponse)(nil),        // 10: exam_api.v1.StartExamResponse
	(*QuestionData)(nil),             // 11: exam_api.v1.QuestionData
	(*QuestionOptionData)(nil),       // 12: exam_api.v1.QuestionOptionData
	(*ExamQuestionRequest)(nil),      // 13: exam_api.v1.ExamQuestionRequest
	(*ExamQuestionResponse)(nil),     // 14: exam_api.v1.ExamQuestionResponse
	(*HeartbeatAndSaveRequest)(nil),  // 15: exam_api.v1.HeartbeatAndSaveRequest
	(*HeartbeatAndSaveResponse)(nil), // 16: exam_api.v1.HeartbeatAndSaveResponse
	(*QuestionAnswerData)(nil),       // 17: exam_api.v1.QuestionAnswerData
	(*SubmitExamRequest)(nil),        // 18: exam_api.v1.SubmitExamRequest
	(*SubmitExamResponse)(nil),       // 19: exam_api.v1.SubmitExamResponse
}
var file_exam_api_v1_exam_modes_proto_depIdxs = []int32{
	8,  // 0: exam_api.v1.GetExamPageListResponse.exam_list:type_name -> exam_api.v1.ExamData
	3,  // 1: exam_api.v1.QuestionData.question_type_id:type_name -> exam_api.v1.QuestionType
	12, // 2: exam_api.v1.QuestionData.question_options_data:type_name -> exam_api.v1.QuestionOptionData
	11, // 3: exam_api.v1.ExamQuestionResponse.question_data:type_name -> exam_api.v1.QuestionData
	17, // 4: exam_api.v1.HeartbeatAndSaveRequest.answer_data:type_name -> exam_api.v1.QuestionAnswerData
	17, // 5: exam_api.v1.SubmitExamRequest.answer_data:type_name -> exam_api.v1.QuestionAnswerData
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_exam_api_v1_exam_modes_proto_init() }
func file_exam_api_v1_exam_modes_proto_init() {
	if File_exam_api_v1_exam_modes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_exam_api_v1_exam_modes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExamPageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExamPageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionOptionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExamQuestionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatAndSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatAndSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionAnswerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitExamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_exam_api_v1_exam_modes_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitExamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_exam_api_v1_exam_modes_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_exam_api_v1_exam_modes_proto_goTypes,
		DependencyIndexes: file_exam_api_v1_exam_modes_proto_depIdxs,
		EnumInfos:         file_exam_api_v1_exam_modes_proto_enumTypes,
		MessageInfos:      file_exam_api_v1_exam_modes_proto_msgTypes,
	}.Build()
	File_exam_api_v1_exam_modes_proto = out.File
	file_exam_api_v1_exam_modes_proto_rawDesc = nil
	file_exam_api_v1_exam_modes_proto_goTypes = nil
	file_exam_api_v1_exam_modes_proto_depIdxs = nil
}
